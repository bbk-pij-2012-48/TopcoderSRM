package SRM156;

public class BombSweeper {

	public static double winPercentage(String[] board) {
		int total = board.length * board[0].length();
		int lose = 0;
		int win = 0;
		int other = 0;
		String[] newBoard = new String[board.length+2];
	
		for(int i=0 ; i<board.length ; i++) {
			StringBuffer tmp = new StringBuffer(board[i]);
			tmp.insert(0,'X');
			tmp.append('X');
			newBoard[i+1] = tmp.toString();
		}
		
		newBoard[0] = "";
		newBoard[board.length+1] = "";
		
		for(int i=0 ; i<board[0].length() + 2 ; i++) {
			newBoard[0] += "X";
			newBoard[board.length+1] += "X";
		}
		
		for(int i=1 ; i<newBoard.length-1 ; i++) {
			for(int j=1 ; j<newBoard[i].length()-1 ; j++) {
				if(newBoard[i].charAt(j) == 'B') {
					lose++;
				} else if(newBoard[i-1].charAt(j) == 'B' || newBoard[i-1].charAt(j-1) == 'B' || newBoard[i-1].charAt(j+1) == 'B' ||
							newBoard[i].charAt(j-1) == 'B' || newBoard[i].charAt(j+1) == 'B' || newBoard[i+1].charAt(j) == 'B' || 
								newBoard[i+1].charAt(j-1) == 'B' || newBoard[i+1].charAt(j+1) == 'B') {
						other++;
					} else {
						win++;
				} 
			}
		}
		return 100*(double)win/(win+lose);
	}
	
	public static void main(String[] args) {
		System.out.println(winPercentage(new String[] {"......B.......B..B...........................B....",
				 "..............B..................BB..B............",
				 "B.B.B.............B.....B..............B..........",
				 "...................B...B....................BB....",
				 "...B.....B.........................B.......B.....B",
				 "B.B.........B.....B.......B..B......B.B...B.BB....",
				 "..B...................BB...............B..........",
				 ".........B...B................B..B................",
				 ".......BB.......B....B................B.....BBB...",
				 ".......BB..........B..............B......BB.......",
				 "...................BB.....................B.......",
				 "...B.B.B......B..............B...B......B.........",
				 "B................B................................",
				 "....B..........B.....B..BB....B...............BB..",
				 "..B....B.....B.............B.....B............B...",
				 "...................B.B........B..B.........B.B....",
				 ".....B.....B......................................",
				 "...........BB......BB...B.B........B...B..........",
				 ".....BBB..........................................",
				 ".B...........B....B...BB......B......B...B.B......",
				 "..................B........BB................B....",
				 "...............................B..B....BBB.B....B.",
				 "..........B.......................................",
				 ".....B..........B....BB......B.B......B......B....",
				 ".....B..................B........B................",
				 "............B.....B..B....BB...B....BB........B...",
				 "..B.................B.........B...................",
				 ".BB..............B................................",
				 "...B....B..................B.................B....",
				 "......B...B......B......................B.B.......",
				 "..............B..................B.......B........",
				 ".....B........BB...B.....B........................",
				 ".......B......B.B..B..........B...........B....B..",
				 "B...B...........B...B...B......B.B...B..B......B..",
				 "....B..B.....B.B.......BB..B............B.B....B..",
				 "B.......B..........B.........B...B.BB......B......",
				 "....B...............................B.............",
				 ".....B.B..........................................",
				 "..........B............B......B.B..B....B.........",
				 "....B...B.......................B.................",
				 "B.................B...........B..B....B...........",
				 "...B.....B........................................",
				 "...B..B......................................BBB..",
				 ".B...B....................................B....B..",
				 "...B...B..........B...B.B.........................",
				 ".....B.............B...BB..........B..BBB.BB......",
				 "....................B.....B.......................",
				 "........B..BB..........B.B....B...........B......B",
				 ".........B.....BB..B.............B....BB..........",
				 "....B..B..............B...B..B..........B........."}
));
	}

}
